<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pgl.xiao.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.pgl.xiao.domain.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="clicks" jdbcType="BIGINT" property="clicks" />
    <result column="praise" jdbcType="BIGINT" property="praise" />
    <result column="releasedate" jdbcType="TIMESTAMP" property="releasedate" />
    <result column="lastupdate" jdbcType="TIMESTAMP" property="lastupdate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, content, clicks, praise, releasedate, lastupdate, status, author, type
  </sql>
  <select id="selectByExample" parameterType="com.pgl.xiao.domain.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pgl.xiao.domain.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pgl.xiao.domain.Article">
    insert into article (id, title, content, 
      clicks, praise, releasedate, 
      lastupdate, status, author, 
      type)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{clicks,jdbcType=BIGINT}, #{praise,jdbcType=BIGINT}, #{releasedate,jdbcType=TIMESTAMP}, 
      #{lastupdate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pgl.xiao.domain.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="clicks != null">
        clicks,
      </if>
      <if test="praise != null">
        praise,
      </if>
      <if test="releasedate != null">
        releasedate,
      </if>
      <if test="lastupdate != null">
        lastupdate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="clicks != null">
        #{clicks,jdbcType=BIGINT},
      </if>
      <if test="praise != null">
        #{praise,jdbcType=BIGINT},
      </if>
      <if test="releasedate != null">
        #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdate != null">
        #{lastupdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pgl.xiao.domain.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.clicks != null">
        clicks = #{record.clicks,jdbcType=BIGINT},
      </if>
      <if test="record.praise != null">
        praise = #{record.praise,jdbcType=BIGINT},
      </if>
      <if test="record.releasedate != null">
        releasedate = #{record.releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastupdate != null">
        lastupdate = #{record.lastupdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      clicks = #{record.clicks,jdbcType=BIGINT},
      praise = #{record.praise,jdbcType=BIGINT},
      releasedate = #{record.releasedate,jdbcType=TIMESTAMP},
      lastupdate = #{record.lastupdate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pgl.xiao.domain.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="clicks != null">
        clicks = #{clicks,jdbcType=BIGINT},
      </if>
      <if test="praise != null">
        praise = #{praise,jdbcType=BIGINT},
      </if>
      <if test="releasedate != null">
        releasedate = #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdate != null">
        lastupdate = #{lastupdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pgl.xiao.domain.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      clicks = #{clicks,jdbcType=BIGINT},
      praise = #{praise,jdbcType=BIGINT},
      releasedate = #{releasedate,jdbcType=TIMESTAMP},
      lastupdate = #{lastupdate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>